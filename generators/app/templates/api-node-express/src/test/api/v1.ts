/**
 * Generated by 'generator-ego' (https://github.com/egodigital/generator-ego)
 *
 * by e.GO Digital GmbH, Aachen, Germany (https://e-go-digital.com)
 */

import { createHost } from '../../index';
import * as assert from 'assert';
const request = require('supertest');

process.env['API_KEY'] = 'TM+MK=19790905+19790923';

const HOST = createHost();

describe('v1 endpoints', function () {
    let server: any;

    before(function(done) {
        server = HOST.listen(8080, () => {
            done();
        });
    });

    after(async function () {
        server.close();
        process.exit(0);
    });

    describe('root endpoints', function () {
        // [POST] /api/v1
        it('should return host information', async function () {
            const RES = await request(HOST)
                .get('/api/v1')
                .expect(200)
                .set('Authorization', 'Bearer ' + process.env['API_KEY'])
                .expect('Content-type', 'application/json; charset=utf-8')
                .send();

            // body
            assert.equal(typeof RES.body, 'object');
            assert.strictEqual(typeof RES.body, 'object');

            // body.success
            assert.equal(RES.body.success, true);
            assert.strictEqual(RES.body.success, true);
        });

        // [POST] /api/v1
        it('should return same result as input', async function () {
            const INPUT_OBJ = {
                'TM': 5979,
                'mk': '19790923'
            };

            const RES = await request(HOST)
                .post('/api/v1')
                .expect(200)
                .set('Authorization', 'Bearer ' + process.env['API_KEY'])
                .set('Content-type', 'application/json; charset=utf-8')
                .expect('Content-type', 'application/json; charset=utf-8')
                .send(INPUT_OBJ);

            // body
            assert.equal(typeof RES.body, 'object');
            assert.strictEqual(typeof RES.body, 'object');

            // body.success
            assert.equal(RES.body.success, true);
            assert.strictEqual(RES.body.success, true);

            // body.data
            assert.equal(typeof RES.body.data, 'object');
            assert.strictEqual(typeof RES.body.data, 'object');

            // body.data.echo
            assert.equal(typeof RES.body.data.echo, 'object');
            assert.strictEqual(typeof RES.body.data.echo, 'object');
            assert.equal(RES.body.data.echo.TM, 5979);
            assert.strictEqual(RES.body.data.echo.TM, 5979);
            assert.equal(RES.body.data.echo.mk, '19790923');
            assert.strictEqual(RES.body.data.echo.mk, '19790923');
        });
    });
});
